Version of session file format:
               1
Time of storage:
               "Wed Dec 21 23:42:06 CET 2011"
Layout:        VerticalP (TerminalP {paneGroups = fromList [], paneTabs = Just TopP, currentPage = 5, detachedId = Nothing, detachedSize = Nothing}) (HorizontalP (TerminalP {paneGroups = fromList [("Browser",HorizontalP (TerminalP {paneGroups = fromList [], paneTabs = Nothing, currentPage = 0, detachedId = Nothing, detachedSize = Nothing}) (HorizontalP (TerminalP {paneGroups = fromList [], paneTabs = Nothing, currentPage = 0, detachedId = Nothing, detachedSize = Nothing}) (TerminalP {paneGroups = fromList [], paneTabs = Nothing, currentPage = 0, detachedId = Nothing, detachedSize = Nothing}) 127) 43)], paneTabs = Just BottomP, currentPage = 0, detachedId = Nothing, detachedSize = Nothing}) (TerminalP {paneGroups = fromList [], paneTabs = Nothing, currentPage = 0, detachedId = Nothing, detachedSize = Nothing}) 398) 753
Population:    [(Just (ErrorsSt ErrorsState),[SplitP RightP,SplitP TopP]),(Just (BufferSt (BufferState "/Users/yoeight/haskell/blueprint/defis/src/Parsing/Functions.hs" 902)),[SplitP LeftP]),(Just (InfoSt (InfoState (Just (Real (RealDescr {dscName' = "runStateT", dscMbTypeStr' = Just "s -> m (a, s)", dscMbModu' = Just (PM {pack = PackageIdentifier {pkgName = PackageName "mtl", pkgVersion = Version {versionBranch = [2,0,1,0], versionTags = []}}, modu = ModuleName ["Control","Monad","State","Lazy"]}), dscMbLocation' = Nothing, dscMbComment' = Nothing, dscTypeHint' = FieldDescr (Real (RealDescr {dscName' = "StateT", dscMbTypeStr' = Just "newtype StateT s m :: (* -> *) a :: * -> (* -> *) -> * -> *\n    = StateT {runStateT :: s -> m (a, s)}", dscMbModu' = Just (PM {pack = PackageIdentifier {pkgName = PackageName "mtl", pkgVersion = Version {versionBranch = [2,0,1,0], versionTags = []}}, modu = ModuleName ["Control","Monad","State","Lazy"]}), dscMbLocation' = Nothing, dscMbComment' = Nothing, dscTypeHint' = NewtypeDescr (SimpleDescr {sdName = "StateT", sdType = Just "StateT {runStateT :: s -> m (a, s)}", sdLocation = Nothing, sdComment = Nothing, sdExported = True}) (Just (SimpleDescr {sdName = "runStateT", sdType = Just "s -> m (a, s)", sdLocation = Nothing, sdComment = Nothing, sdExported = True})), dscExported' = True})), dscExported' = True}))))),[SplitP RightP,SplitP TopP,GroupP "Browser",SplitP BottomP,SplitP BottomP]),(Just (BufferSt (BufferState "/Users/yoeight/haskell/blueprint/defis/src/Parsing/Instances.hs" 718)),[SplitP LeftP]),(Just (BufferSt (BufferState "/Users/yoeight/haskell/blueprint/defis/src/Utils/Instances.hs" 413)),[SplitP LeftP]),(Just (LogSt LogState),[SplitP RightP,SplitP BottomP]),(Just (BufferSt (BufferState "/Users/yoeight/haskell/blueprint/defis/src/Main.hs" 367)),[SplitP LeftP]),(Just (ModulesSt (ModulesState 334 (PackageScope True,False) (Just (ModuleName ["Control","Monad","State","Lazy"]),Just "runStateT") (ExpanderState {packageExp = ([],[]), packageExpNoBlack = ([[1]],[]), packageDExp = ([],[]), packageDExpNoBlack = ([[7],[0,5,9],[0,5],[0]],[[4]]), workspaceExp = ([],[]), workspaceExpNoBlack = ([[1]],[]), workspaceDExp = ([],[]), workspaceDExpNoBlack = ([[4],[1],[0]],[]), systemExp = ([],[]), systemExpNoBlack = ([],[])}))),[SplitP RightP,SplitP TopP,GroupP "Browser",SplitP BottomP,SplitP TopP]),(Just (BufferSt (BufferState "/Users/yoeight/haskell/blueprint/defis/src/Parsing.hs" 375)),[SplitP LeftP]),(Just (SearchSt (SearchState {searchString = "runStateT", searchScope = PackageScope False, searchMode = Exact {caseSense = False}})),[SplitP RightP,SplitP TopP]),(Just (BufferSt (BufferState "/Users/yoeight/haskell/blueprint/defis/src/Tokens.hs" 888)),[SplitP LeftP]),(Just (BufferSt (BufferState "/Users/yoeight/haskell/blueprint/defis/src/Utils.hs" 335)),[SplitP LeftP]),(Just (WorkspaceSt WorkspaceState),[SplitP RightP,SplitP TopP,GroupP "Browser",SplitP TopP])]
Window size:   (1440,852)
Completion size:
               (1025,401)
Workspace:     Just "/Users/yoeight/haskell/blueprint/defis/defis.lkshw"
Active pane:   Just "Tokens.hs"
Toolbar visible:
               True
FindbarState:  (True,FindState {entryStr = "", entryHist = [""], replaceStr = "", replaceHist = [], caseSensitive = False, entireWord = False, wrapAround = False, regex = False, lineNr = 1})
Recently opened files:
               ["/Users/yoeight/haskell/blueprint/query/src/Main.hs","/Users/yoeight/haskell/blueprint/query/src/Query.hs","/Users/yoeight/haskell/blueprint/query/src/Types.hs","/Users/yoeight/haskell/work/trading/src/Main.hs","/Users/yoeight/haskell/work/trading/src/Network.hs","/Users/yoeight/haskell/work/trading/src/Yahoo.hs","/Users/yoeight/haskell/work/newsgroups/src/Newsgroup/Article.hs","/Users/yoeight/haskell/work/newsgroups/src/Newsgroup/Group.hs","/Users/yoeight/haskell/work/newsgroups/src/Main.hs","/Users/yoeight/haskell/work/newsgroups/src/Newsgroup.hs","/Users/yoeight/haskell/blueprint/sorting/src/Main.hs","/Users/yoeight/haskell/blueprint/sorting/src/Sort.hs"]
Recently opened workspaces:
               ["/Users/yoeight/haskell/blueprint/query/query.lkshw","/Users/yoeight/haskell/work/trading/trading.lkshw","/Users/yoeight/haskell/work/newsgroups/Newsgroups.lkshw","/Users/yoeight/haskell/blueprint/sorting/SortingWS.lkshw"]